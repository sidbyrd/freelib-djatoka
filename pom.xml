<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>dss.fondren.rice.edu</groupId>
  <artifactId>rice-freelib-djatoka</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Rice FreeLibrary Djatoka</name>
  <description>A fork of the aDORe-Djatoka JPEG2000 image server</description>
  <url>https://github.com/sidbyrd/freelib-djatoka/</url>
  <inceptionYear>20110701</inceptionYear>
  <licenses>
    <license>
      <name>GNU Lesser General Public License, Version 3.0</name>
      <url>http://www.gnu.org/licenses/lgpl-3.0.html</url>
      <comments>Licensed under the GNU LGPL 3.0 or later (at your option)</comments>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git@github.com:sidbyrd/freelib-djatoka/.git</connection>
    <developerConnection>scm:git:git@github.com:sidbyrd/freelib-djatoka.git</developerConnection>
    <url>git@github.com:sidbyrd/freelib-djatoka.git</url>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/sidbyrd/freelib-djatoka/issues</url>
  </issueManagement>
  <organization>
    <name>Rice University</name>
    <url>http://www.rice.edu</url>
  </organization>
  <developers>
    <developer>
      <name>Ryan Chute</name>
      <roles>
        <role>original developer</role>
        <role>project architect</role>
      </roles>
    </developer>
  </developers>
  <properties>
    <!-- djatoka settings are in src/main/resources/djatoka-properties.xml -->

    <!-- You shouldn't need to set anything below here; these are generic -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <console.log>true</console.log>

    <freelib.build.tools.version>0.0.6</freelib.build.tools.version>
    <maven.checkstyle.version>2.11</maven.checkstyle.version>
    <freelib.utils.version>0.4.6-jdk1.6</freelib.utils.version>
    <logback.version>1.0.13</logback.version>
    <junit.version>4.11</junit.version>

  </properties>
  <dependencies>
    <dependency>
      <!-- mvn org.apache.maven.plugins:maven-install-plugin:2.3.1:install-file -Dfile=lib/freelib-utils-0.4.6-jdk1.6.jar -DgroupId=info.freelibrary -DartifactId=freelib-utils -Dversion=0.4.6-jdk1.6 -Dpackaging=jar -DlocalRepositoryPath=`pwd`/repo/ -DcreateChecksum=true-->
      <groupId>info.freelibrary</groupId>
      <artifactId>freelib-utils</artifactId>
      <version>${freelib.utils.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.10</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.10</version>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.3.03</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>com.martiansoftware</groupId>
      <artifactId>jsap</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
	    <!-- mvn org.apache.maven.plugins:maven-install-plugin:2.3.1:install-file -Dfile=lib/kdu_jni.jar -DgroupId=kdu -DartifactId=kdu_jni -Dversion=0.0.0 -Dpackaging=jar -DlocalRepositoryPath=`pwd`/repo/ -->
      <groupId>kdu</groupId>
      <artifactId>kdu_jni</artifactId>
      <version>0.0.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
	    <!-- mvn org.apache.maven.plugins:maven-install-plugin:2.3.1:install-file -Dfile=lib/ij-ImageIO.jar -DgroupId=imagej -DartifactId=ij-ImageIO -Dversion=0.0.0 -Dpackaging=jar -DlocalRepositoryPath=`pwd`/repo/ -->
      <groupId>imagej</groupId>
      <artifactId>ij-ImageIO</artifactId>
      <version>0.0.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <!-- mvn org.apache.maven.plugins:maven-install-plugin:2.3.1:install-file -Dfile=lib/ij.jar -DgroupId=imagej -DartifactId=ij -Dversion=0.0.0 -Dpackaging=jar -DlocalRepositoryPath=`pwd`/repo/ -->
      <groupId>imagej</groupId>
      <artifactId>ij</artifactId>
      <version>0.0.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.imgscalr</groupId>
      <artifactId>imgscalr-lib</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <groupId>net.imagej</groupId>
      <artifactId>ij</artifactId>
      <version>1.48r</version>
    </dependency>
    <dependency>
      <groupId>xom</groupId>
      <artifactId>xom</artifactId>
      <version>1.2.5</version>
    </dependency>
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>2.3</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.3.1</version>
    </dependency>
    <!-- Below here are the dependencies for our Maven mojos -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>3.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>3.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>3.2.1</version>
    </dependency>
    <dependency>
    <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
    <scope>provided</scope>
</dependency>
  </dependencies>
  <build>
    <finalName>freelib-djatoka</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <!-- We now require 1.7 or greater JDK -->
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <!-- The jetty plugin is how we run djatoka from within Maven -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <path>jp2</path>
          <!-- Putting JVM args in CDATA to prevent wrapping -->
          <jvmArgs><![CDATA[-Djetty.port=8080 -Dkakadu.home=${LD_LIBRARY_PATH} -Djava.library.path=${LD_LIBRARY_PATH} -DDJATOKA_HOME=${basedir} -DLD_LIBRARY_PATH=${LD_LIBRARY_PATH} -DDYLD_LIBRARY_PATH=${basedir}/${DYLD_LIBRARY_PATH}]]></jvmArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>linux-32</id>
      <activation>
        <os>
          <name>Linux</name>
          <arch>i386</arch>
        </os>
      </activation>
      <properties>
        <LD_LIBRARY_PATH>${project.basedir}/lib/Linux-x86-32</LD_LIBRARY_PATH>
      </properties>
    </profile>
    <profile>
      <id>linux-64</id>
      <activation>
        <os>
          <name>Linux</name>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <LD_LIBRARY_PATH>${project.basedir}/lib/Linux-x86-64</LD_LIBRARY_PATH>
      </properties>
    </profile>
    <profile>
      <id>mac-x86</id>
      <activation>
        <os>
          <name>Mac OS X</name>
        </os>
      </activation>
      <properties>
        <!-- Include both b/c java.library.path is set to LD_LIBRARY_PATH -->
        <DYLD_LIBRARY_PATH>lib/Mac-x86</DYLD_LIBRARY_PATH>
        <LD_LIBRARY_PATH>${project.basedir}/lib/Mac-x86</LD_LIBRARY_PATH>
      </properties>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>x86</arch>
        </os>
      </activation>
      <properties>
        <LD_LIBRARY_PATH>${project.basedir}/lib/Win32</LD_LIBRARY_PATH>
      </properties>
    </profile>
    <profile>
      <id>solaris-x86</id>
      <activation>
        <os>
          <name>SunOS</name>
          <arch>x86</arch>
        </os>
      </activation>
      <properties>
        <LD_LIBRARY_PATH>${project.basedir}/lib/Solaris-x86</LD_LIBRARY_PATH>
      </properties>
    </profile>
    <profile>
      <id>solaris-sparc</id>
      <activation>
        <os>
          <name>SunOS</name>
          <arch>sparc</arch>
        </os>
      </activation>
      <properties>
        <LD_LIBRARY_PATH>${project.basedir}/lib/Solaris-Sparc</LD_LIBRARY_PATH>
      </properties>
    </profile>
    <profile>
      <id>solaris-sparcv9</id>
      <activation>
        <os>
          <name>Solaris</name>
          <arch>sparc</arch>
        </os>
      </activation>
      <properties>
        <LD_LIBRARY_PATH>${project.basedir}/lib/Solaris-Sparcv9</LD_LIBRARY_PATH>
      </properties>
    </profile>
  </profiles>
  <!-- added support for building with snapshot dependencies -->
  <repositories>
    <repository>
      <id>snapshots-repo</id>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
	<repository>
	  <id>localfile</id>
	  <url>file://${project.basedir}/repo</url>
	</repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>snapshots-repo</id>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </pluginRepository>
	  <pluginRepository>
		  <id>localfile</id>
		  <url>file://${project.basedir}/repo</url>
	  </pluginRepository>
  </pluginRepositories>
</project>
